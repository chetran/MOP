
debug/MOP:     file format elf32-littlearm


Disassembly of section .text:

20000000 <startup>:

#include "startup.h"

__attribute__((naked)) __attribute__((section(".start_section"))) void
startup(void) {
	__asm__ volatile(" LDR R0,=0x2001C000\n"); /* set stack */
20000000:	4802      	ldr	r0, [pc, #8]	; (2000000c <startup+0xc>)
	__asm__ volatile(" MOV SP,R0\n");
20000002:	4685      	mov	sp, r0
	__asm__ volatile(" BL main\n");   /* call main */
20000004:	f000 f83a 	bl	2000007c <main>
	__asm__ volatile(".L1: B .L1\n"); /* never return */
20000008:	e7fe      	b.n	20000008 <startup+0x8>
}
2000000a:	46c0      	nop			; (mov r8, r8)
2000000c:	2001c000 	andcs	ip, r1, r0

20000010 <print_char>:
	volatile unsigned short gtpr;
} Usart;

#define USART1 ((Usart *) 0x40011000)

static void print_char(char c) {
20000010:	b580      	push	{r7, lr}
20000012:	b082      	sub	sp, #8
20000014:	af00      	add	r7, sp, #0
20000016:	0002      	movs	r2, r0
20000018:	1dfb      	adds	r3, r7, #7
2000001a:	701a      	strb	r2, [r3, #0]
	// write character to usart1
	while ((USART1->sr & 0x80) == 0)
2000001c:	46c0      	nop			; (mov r8, r8)
2000001e:	4b0b      	ldr	r3, [pc, #44]	; (2000004c <print_char+0x3c>)
20000020:	881b      	ldrh	r3, [r3, #0]
20000022:	b29b      	uxth	r3, r3
20000024:	001a      	movs	r2, r3
20000026:	2380      	movs	r3, #128	; 0x80
20000028:	4013      	ands	r3, r2
2000002a:	d0f8      	beq.n	2000001e <print_char+0xe>
		;
	USART1->dr = (unsigned short) c;
2000002c:	4a07      	ldr	r2, [pc, #28]	; (2000004c <print_char+0x3c>)
2000002e:	1dfb      	adds	r3, r7, #7
20000030:	781b      	ldrb	r3, [r3, #0]
20000032:	b29b      	uxth	r3, r3
20000034:	8093      	strh	r3, [r2, #4]
	if (c == '\n') {
20000036:	1dfb      	adds	r3, r7, #7
20000038:	781b      	ldrb	r3, [r3, #0]
2000003a:	2b0a      	cmp	r3, #10
2000003c:	d102      	bne.n	20000044 <print_char+0x34>
		print_char('\r');
2000003e:	200d      	movs	r0, #13
20000040:	f7ff ffe6 	bl	20000010 <print_char>
	}
}
20000044:	46c0      	nop			; (mov r8, r8)
20000046:	46bd      	mov	sp, r7
20000048:	b002      	add	sp, #8
2000004a:	bd80      	pop	{r7, pc}
2000004c:	40011000 	andmi	r1, r1, r0

20000050 <print>:

void print(char *s) {
20000050:	b580      	push	{r7, lr}
20000052:	b082      	sub	sp, #8
20000054:	af00      	add	r7, sp, #0
20000056:	6078      	str	r0, [r7, #4]
	while (*s != '\0') {
20000058:	e006      	b.n	20000068 <print+0x18>
		print_char(*(s++));
2000005a:	687b      	ldr	r3, [r7, #4]
2000005c:	1c5a      	adds	r2, r3, #1
2000005e:	607a      	str	r2, [r7, #4]
20000060:	781b      	ldrb	r3, [r3, #0]
20000062:	0018      	movs	r0, r3
20000064:	f7ff ffd4 	bl	20000010 <print_char>
	while (*s != '\0') {
20000068:	687b      	ldr	r3, [r7, #4]
2000006a:	781b      	ldrb	r3, [r3, #0]
2000006c:	2b00      	cmp	r3, #0
2000006e:	d1f4      	bne.n	2000005a <print+0xa>
	}
}
20000070:	46c0      	nop			; (mov r8, r8)
20000072:	46c0      	nop			; (mov r8, r8)
20000074:	46bd      	mov	sp, r7
20000076:	b002      	add	sp, #8
20000078:	bd80      	pop	{r7, pc}
2000007a:	46c0      	nop			; (mov r8, r8)

2000007c <main>:
volatile int ticks;
volatile int seconds;
volatile int count = 0;

void main(void)
{
2000007c:	b580      	push	{r7, lr}
2000007e:	af00      	add	r7, sp, #0
	init_app();
20000080:	f000 f80a 	bl	20000098 <init_app>
	while(1)
	{
		*ODR_LOW = count;
20000084:	4b02      	ldr	r3, [pc, #8]	; (20000090 <main+0x14>)
20000086:	681a      	ldr	r2, [r3, #0]
20000088:	4b02      	ldr	r3, [pc, #8]	; (20000094 <main+0x18>)
2000008a:	b2d2      	uxtb	r2, r2
2000008c:	701a      	strb	r2, [r3, #0]
2000008e:	e7f9      	b.n	20000084 <main+0x8>
20000090:	2000028c 	andcs	r0, r0, ip, lsl #5
20000094:	40020c14 	andmi	r0, r2, r4, lsl ip

20000098 <init_app>:
	}
}

void init_app(void)
{
20000098:	b580      	push	{r7, lr}
2000009a:	af00      	add	r7, sp, #0
	// Starts the clocks for D and E port
	*((unsigned long *) 0x40023830) = 0x18;
2000009c:	4b1a      	ldr	r3, [pc, #104]	; (20000108 <init_app+0x70>)
2000009e:	2218      	movs	r2, #24
200000a0:	601a      	str	r2, [r3, #0]
	// Starts the clock for SYSCFG */
	* ((unsigned long *)0x40023844) |= 0x4000; 	
200000a2:	4b1a      	ldr	r3, [pc, #104]	; (2000010c <init_app+0x74>)
200000a4:	681a      	ldr	r2, [r3, #0]
200000a6:	4b19      	ldr	r3, [pc, #100]	; (2000010c <init_app+0x74>)
200000a8:	2180      	movs	r1, #128	; 0x80
200000aa:	01c9      	lsls	r1, r1, #7
200000ac:	430a      	orrs	r2, r1
200000ae:	601a      	str	r2, [r3, #0]
	// Relocates the vector table
	* ((unsigned long *)0xE000ED08) = 0x2001C000;
200000b0:	4b17      	ldr	r3, [pc, #92]	; (20000110 <init_app+0x78>)
200000b2:	4a18      	ldr	r2, [pc, #96]	; (20000114 <init_app+0x7c>)
200000b4:	601a      	str	r2, [r3, #0]

	// Initialize port D for display usage
	*D_MODER = 0x55555555;	
200000b6:	4b18      	ldr	r3, [pc, #96]	; (20000118 <init_app+0x80>)
200000b8:	4a18      	ldr	r2, [pc, #96]	; (2000011c <init_app+0x84>)
200000ba:	601a      	str	r2, [r3, #0]

	// Connect PE3 to EXTI 0 to 3
	*((unsigned int *) SYSCFG_EXTICR1) = 0x0444;
200000bc:	4b18      	ldr	r3, [pc, #96]	; (20000120 <init_app+0x88>)
200000be:	4a19      	ldr	r2, [pc, #100]	; (20000124 <init_app+0x8c>)
200000c0:	601a      	str	r2, [r3, #0]

	*EXTI_IMR |= EXTI2_IRQ_BPOS | EXTI1_IRQ_BPOS | EXTI0_IRQ_BPOS; // Activates EXTIS
200000c2:	4b19      	ldr	r3, [pc, #100]	; (20000128 <init_app+0x90>)
200000c4:	681a      	ldr	r2, [r3, #0]
200000c6:	4b18      	ldr	r3, [pc, #96]	; (20000128 <init_app+0x90>)
200000c8:	2107      	movs	r1, #7
200000ca:	430a      	orrs	r2, r1
200000cc:	601a      	str	r2, [r3, #0]
	*EXTI_RTSR |= EXTI2_IRQ_BPOS | EXTI1_IRQ_BPOS | EXTI0_IRQ_BPOS;; // Activates for rising flag
200000ce:	4b17      	ldr	r3, [pc, #92]	; (2000012c <init_app+0x94>)
200000d0:	681a      	ldr	r2, [r3, #0]
200000d2:	4b16      	ldr	r3, [pc, #88]	; (2000012c <init_app+0x94>)
200000d4:	2107      	movs	r1, #7
200000d6:	430a      	orrs	r2, r1
200000d8:	601a      	str	r2, [r3, #0]
	*EXTI_FTSR &= ~EXTI2_IRQ_BPOS | ~EXTI1_IRQ_BPOS | ~EXTI0_IRQ_BPOS;; // Masks negative flag
200000da:	4a15      	ldr	r2, [pc, #84]	; (20000130 <init_app+0x98>)
200000dc:	4b14      	ldr	r3, [pc, #80]	; (20000130 <init_app+0x98>)
200000de:	6812      	ldr	r2, [r2, #0]
200000e0:	601a      	str	r2, [r3, #0]

	*EXTI2_IRQVEC = exit2_handler; // sets up the interrupt handler
200000e2:	4b14      	ldr	r3, [pc, #80]	; (20000134 <init_app+0x9c>)
200000e4:	4a14      	ldr	r2, [pc, #80]	; (20000138 <init_app+0xa0>)
200000e6:	601a      	str	r2, [r3, #0]
	*EXTI1_IRQVEC = exit1_handler; // sets up the interrupt handler
200000e8:	4b14      	ldr	r3, [pc, #80]	; (2000013c <init_app+0xa4>)
200000ea:	4a15      	ldr	r2, [pc, #84]	; (20000140 <init_app+0xa8>)
200000ec:	601a      	str	r2, [r3, #0]
	*EXTI0_IRQVEC = exit0_handler; // sets up the interrupt handler
200000ee:	4b15      	ldr	r3, [pc, #84]	; (20000144 <init_app+0xac>)
200000f0:	4a15      	ldr	r2, [pc, #84]	; (20000148 <init_app+0xb0>)
200000f2:	601a      	str	r2, [r3, #0]

	*NVIC_ISER0 |= NVIC_EXTI2_IRQ_BPOS | NVIC_EXTI1_IRQ_BPOS | NVIC_EXTI0_IRQ_BPOS;
200000f4:	4b15      	ldr	r3, [pc, #84]	; (2000014c <init_app+0xb4>)
200000f6:	681a      	ldr	r2, [r3, #0]
200000f8:	4b14      	ldr	r3, [pc, #80]	; (2000014c <init_app+0xb4>)
200000fa:	21e0      	movs	r1, #224	; 0xe0
200000fc:	0049      	lsls	r1, r1, #1
200000fe:	430a      	orrs	r2, r1
20000100:	601a      	str	r2, [r3, #0]
	
}
20000102:	46c0      	nop			; (mov r8, r8)
20000104:	46bd      	mov	sp, r7
20000106:	bd80      	pop	{r7, pc}
20000108:	40023830 	andmi	r3, r2, r0, lsr r8
2000010c:	40023844 	andmi	r3, r2, r4, asr #16
20000110:	e000ed08 	and	lr, r0, r8, lsl #26
20000114:	2001c000 	andcs	ip, r1, r0
20000118:	40020c00 	andmi	r0, r2, r0, lsl #24
2000011c:	55555555 	ldrbpl	r5, [r5, #-1365]	; 0xfffffaab
20000120:	40013808 	andmi	r3, r1, r8, lsl #16
20000124:	00000444 	andeq	r0, r0, r4, asr #8
20000128:	40013c00 	andmi	r3, r1, r0, lsl #24
2000012c:	40013c08 	andmi	r3, r1, r8, lsl #24
20000130:	40013c0c 	andmi	r3, r1, ip, lsl #24
20000134:	2001c060 	andcs	ip, r1, r0, rrx
20000138:	20000151 	andcs	r0, r0, r1, asr r1
2000013c:	2001c05c 	andcs	ip, r1, ip, asr r0
20000140:	20000163 	andcs	r0, r0, r3, ror #2
20000144:	2001c058 	andcs	ip, r1, r8, asr r0
20000148:	20000191 	mulcs	r0, r1, r1
2000014c:	e000e100 	and	lr, r0, r0, lsl #2

20000150 <exit2_handler>:

void exit2_handler(void)
{
20000150:	b580      	push	{r7, lr}
20000152:	b082      	sub	sp, #8
20000154:	af00      	add	r7, sp, #0
	int lampa = 100;
20000156:	2364      	movs	r3, #100	; 0x64
20000158:	607b      	str	r3, [r7, #4]
	

}
2000015a:	46c0      	nop			; (mov r8, r8)
2000015c:	46bd      	mov	sp, r7
2000015e:	b002      	add	sp, #8
20000160:	bd80      	pop	{r7, pc}

20000162 <exit1_handler>:
void exit1_handler(void)
{
20000162:	b580      	push	{r7, lr}
20000164:	af00      	add	r7, sp, #0
	if (*EXTI_PR & EXTI1_IRQ_BPOS)
20000166:	4b08      	ldr	r3, [pc, #32]	; (20000188 <exit1_handler+0x26>)
20000168:	681b      	ldr	r3, [r3, #0]
2000016a:	2202      	movs	r2, #2
2000016c:	4013      	ands	r3, r2
2000016e:	d008      	beq.n	20000182 <exit1_handler+0x20>
	{
		count = 0;
20000170:	4b06      	ldr	r3, [pc, #24]	; (2000018c <exit1_handler+0x2a>)
20000172:	2200      	movs	r2, #0
20000174:	601a      	str	r2, [r3, #0]
		*EXTI_PR |= EXTI1_IRQ_BPOS;
20000176:	4b04      	ldr	r3, [pc, #16]	; (20000188 <exit1_handler+0x26>)
20000178:	681a      	ldr	r2, [r3, #0]
2000017a:	4b03      	ldr	r3, [pc, #12]	; (20000188 <exit1_handler+0x26>)
2000017c:	2102      	movs	r1, #2
2000017e:	430a      	orrs	r2, r1
20000180:	601a      	str	r2, [r3, #0]
	}

}
20000182:	46c0      	nop			; (mov r8, r8)
20000184:	46bd      	mov	sp, r7
20000186:	bd80      	pop	{r7, pc}
20000188:	40013c14 	andmi	r3, r1, r4, lsl ip
2000018c:	2000028c 	andcs	r0, r0, ip, lsl #5

20000190 <exit0_handler>:
void exit0_handler(void)
{
20000190:	b580      	push	{r7, lr}
20000192:	af00      	add	r7, sp, #0
	if (*EXTI_PR & EXTI0_IRQ_BPOS)
20000194:	4b09      	ldr	r3, [pc, #36]	; (200001bc <exit0_handler+0x2c>)
20000196:	681b      	ldr	r3, [r3, #0]
20000198:	2201      	movs	r2, #1
2000019a:	4013      	ands	r3, r2
2000019c:	d00a      	beq.n	200001b4 <exit0_handler+0x24>
	{
		*EXTI_PR |= EXTI0_IRQ_BPOS;
2000019e:	4b07      	ldr	r3, [pc, #28]	; (200001bc <exit0_handler+0x2c>)
200001a0:	681a      	ldr	r2, [r3, #0]
200001a2:	4b06      	ldr	r3, [pc, #24]	; (200001bc <exit0_handler+0x2c>)
200001a4:	2101      	movs	r1, #1
200001a6:	430a      	orrs	r2, r1
200001a8:	601a      	str	r2, [r3, #0]
		count++;
200001aa:	4b05      	ldr	r3, [pc, #20]	; (200001c0 <exit0_handler+0x30>)
200001ac:	681b      	ldr	r3, [r3, #0]
200001ae:	1c5a      	adds	r2, r3, #1
200001b0:	4b03      	ldr	r3, [pc, #12]	; (200001c0 <exit0_handler+0x30>)
200001b2:	601a      	str	r2, [r3, #0]
	}
}
200001b4:	46c0      	nop			; (mov r8, r8)
200001b6:	46bd      	mov	sp, r7
200001b8:	bd80      	pop	{r7, pc}
200001ba:	46c0      	nop			; (mov r8, r8)
200001bc:	40013c14 	andmi	r3, r1, r4, lsl ip
200001c0:	2000028c 	andcs	r0, r0, ip, lsl #5

200001c4 <exti3_handler>:


void exti3_handler(void)
{
200001c4:	b580      	push	{r7, lr}
200001c6:	af00      	add	r7, sp, #0
	if (*EXTI_PR & 8)
200001c8:	4b22      	ldr	r3, [pc, #136]	; (20000254 <exti3_handler+0x90>)
200001ca:	681b      	ldr	r3, [r3, #0]
200001cc:	2208      	movs	r2, #8
200001ce:	4013      	ands	r3, r2
200001d0:	d03d      	beq.n	2000024e <exti3_handler+0x8a>
	{
		*EXTI_PR |= 8;
200001d2:	4b20      	ldr	r3, [pc, #128]	; (20000254 <exti3_handler+0x90>)
200001d4:	681a      	ldr	r2, [r3, #0]
200001d6:	4b1f      	ldr	r3, [pc, #124]	; (20000254 <exti3_handler+0x90>)
200001d8:	2108      	movs	r1, #8
200001da:	430a      	orrs	r2, r1
200001dc:	601a      	str	r2, [r3, #0]
		if (*E_IDR_LOW & 1)
200001de:	4b1e      	ldr	r3, [pc, #120]	; (20000258 <exti3_handler+0x94>)
200001e0:	781b      	ldrb	r3, [r3, #0]
200001e2:	b2db      	uxtb	r3, r3
200001e4:	001a      	movs	r2, r3
200001e6:	2301      	movs	r3, #1
200001e8:	4013      	ands	r3, r2
200001ea:	d00c      	beq.n	20000206 <exti3_handler+0x42>
		{
			*E_ODR_LOW |= (1<<4);
200001ec:	4b1b      	ldr	r3, [pc, #108]	; (2000025c <exti3_handler+0x98>)
200001ee:	781b      	ldrb	r3, [r3, #0]
200001f0:	b2db      	uxtb	r3, r3
200001f2:	4a1a      	ldr	r2, [pc, #104]	; (2000025c <exti3_handler+0x98>)
200001f4:	2110      	movs	r1, #16
200001f6:	430b      	orrs	r3, r1
200001f8:	b2db      	uxtb	r3, r3
200001fa:	7013      	strb	r3, [r2, #0]
			count++;
200001fc:	4b18      	ldr	r3, [pc, #96]	; (20000260 <exti3_handler+0x9c>)
200001fe:	681b      	ldr	r3, [r3, #0]
20000200:	1c5a      	adds	r2, r3, #1
20000202:	4b17      	ldr	r3, [pc, #92]	; (20000260 <exti3_handler+0x9c>)
20000204:	601a      	str	r2, [r3, #0]
		}
		if (*E_IDR_LOW & 2)
20000206:	4b14      	ldr	r3, [pc, #80]	; (20000258 <exti3_handler+0x94>)
20000208:	781b      	ldrb	r3, [r3, #0]
2000020a:	b2db      	uxtb	r3, r3
2000020c:	001a      	movs	r2, r3
2000020e:	2302      	movs	r3, #2
20000210:	4013      	ands	r3, r2
20000212:	d00a      	beq.n	2000022a <exti3_handler+0x66>
		{
			*E_ODR_LOW |= (1<<5);
20000214:	4b11      	ldr	r3, [pc, #68]	; (2000025c <exti3_handler+0x98>)
20000216:	781b      	ldrb	r3, [r3, #0]
20000218:	b2db      	uxtb	r3, r3
2000021a:	4a10      	ldr	r2, [pc, #64]	; (2000025c <exti3_handler+0x98>)
2000021c:	2120      	movs	r1, #32
2000021e:	430b      	orrs	r3, r1
20000220:	b2db      	uxtb	r3, r3
20000222:	7013      	strb	r3, [r2, #0]
			count = 0;
20000224:	4b0e      	ldr	r3, [pc, #56]	; (20000260 <exti3_handler+0x9c>)
20000226:	2200      	movs	r2, #0
20000228:	601a      	str	r2, [r3, #0]
		}
		if (*E_IDR_LOW & 4)
2000022a:	4b0b      	ldr	r3, [pc, #44]	; (20000258 <exti3_handler+0x94>)
2000022c:	781b      	ldrb	r3, [r3, #0]
2000022e:	b2db      	uxtb	r3, r3
20000230:	001a      	movs	r2, r3
20000232:	2304      	movs	r3, #4
20000234:	4013      	ands	r3, r2
20000236:	d00a      	beq.n	2000024e <exti3_handler+0x8a>
		{
			*E_ODR_LOW |= (1<<6);
20000238:	4b08      	ldr	r3, [pc, #32]	; (2000025c <exti3_handler+0x98>)
2000023a:	781b      	ldrb	r3, [r3, #0]
2000023c:	b2db      	uxtb	r3, r3
2000023e:	4a07      	ldr	r2, [pc, #28]	; (2000025c <exti3_handler+0x98>)
20000240:	2140      	movs	r1, #64	; 0x40
20000242:	430b      	orrs	r3, r1
20000244:	b2db      	uxtb	r3, r3
20000246:	7013      	strb	r3, [r2, #0]
			if (E_IDR_LOW)
				*E_ODR_LOW = 0xFF;
20000248:	4b04      	ldr	r3, [pc, #16]	; (2000025c <exti3_handler+0x98>)
2000024a:	22ff      	movs	r2, #255	; 0xff
2000024c:	701a      	strb	r2, [r3, #0]
			else
				*E_ODR_LOW = 0xFF;
		}
		
	}
}
2000024e:	46c0      	nop			; (mov r8, r8)
20000250:	46bd      	mov	sp, r7
20000252:	bd80      	pop	{r7, pc}
20000254:	40013c14 	andmi	r3, r1, r4, lsl ip
20000258:	40021010 	andmi	r1, r2, r0, lsl r0
2000025c:	40021014 	andmi	r1, r2, r4, lsl r0
20000260:	2000028c 	andcs	r0, r0, ip, lsl #5

20000264 <graphic_initalize>:

// ------------------------------------------------------- MD407 BUILT IN FUNCTIONS ------------------------------------------------------------------------------- //
__attribute__((naked))
void graphic_initalize(void)
{
20000264:	4770dff0 			; <UNDEFINED> instruction: 0x4770dff0
	__asm volatile (" .HWORD 0xDFF0\n");
	__asm volatile (" BX LR\n");
}
20000268:	46c0      	nop			; (mov r8, r8)

2000026a <graphic_clear_screen>:

__attribute__((naked))
void graphic_clear_screen(void)
{
2000026a:	4770dff1 			; <UNDEFINED> instruction: 0x4770dff1
	__asm volatile (" .HWORD 0xDFF1\n");
	__asm volatile (" BX LR\n");
}
2000026e:	46c0      	nop			; (mov r8, r8)

20000270 <graphic_pixel_set>:

__attribute__((naked))
void graphic_pixel_set(void)
{
20000270:	4770dff2 			; <UNDEFINED> instruction: 0x4770dff2
	__asm volatile (" .HWORD 0xDFF2\n");
	__asm volatile (" BX LR\n");
}
20000274:	46c0      	nop			; (mov r8, r8)

20000276 <graphic_pixel_clear>:

__attribute__((naked))
void graphic_pixel_clear(void)
{
20000276:	4770dff3 			; <UNDEFINED> instruction: 0x4770dff3
	__asm volatile (" .HWORD 0xDFF3\n");
	__asm volatile (" BX LR\n");
}
2000027a:	46c0      	nop			; (mov r8, r8)

2000027c <flag>:
2000027c:	00000000 	andeq	r0, r0, r0

20000280 <delay_count>:
20000280:	00000000 	andeq	r0, r0, r0

20000284 <ticks>:
20000284:	00000000 	andeq	r0, r0, r0

20000288 <seconds>:
20000288:	00000000 	andeq	r0, r0, r0

2000028c <count>:
2000028c:	00000000 	andeq	r0, r0, r0

Disassembly of section .debug_info:

00000000 <.debug_info>:
   0:	0000013c 	andeq	r0, r0, ip, lsr r1
   4:	00000004 	andeq	r0, r0, r4
   8:	01040000 	mrseq	r0, (UNDEF: 4)
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	0000180c 	andeq	r1, r0, ip, lsl #16
  14:	0000a400 	andeq	sl, r0, r0, lsl #8
  18:	00001000 	andeq	r1, r0, r0
  1c:	00006a20 	andeq	r6, r0, r0, lsr #20
  20:	00000000 	andeq	r0, r0, r0
  24:	011a0200 	tsteq	sl, r0, lsl #4
  28:	00d60905 	sbcseq	r0, r6, r5, lsl #18
  2c:	73030000 	movwvc	r0, #12288	; 0x3000
  30:	06010072 			; <UNDEFINED> instruction: 0x06010072
  34:	0000dd1a 	andeq	sp, r0, sl, lsl sp
  38:	06040000 	streq	r0, [r4], -r0
  3c:	01000000 	mrseq	r0, (UNDEF: 0)
  40:	00dd1a07 	sbcseq	r1, sp, r7, lsl #20
  44:	03020000 	movweq	r0, #8192	; 0x2000
  48:	01007264 	tsteq	r0, r4, ror #4
  4c:	00dd1a08 	sbcseq	r1, sp, r8, lsl #20
  50:	04040000 	streq	r0, [r4], #-0
  54:	00000092 	muleq	r0, r2, r0
  58:	dd1a0901 	vldrle.16	s0, [sl, #-2]	; <UNPREDICTABLE>
  5c:	06000000 	streq	r0, [r0], -r0
  60:	72726203 	rsbsvc	r6, r2, #805306368	; 0x30000000
  64:	1a0a0100 	bne	28046c <startup-0x1fd7fb94>
  68:	000000dd 	ldrdeq	r0, [r0], -sp
  6c:	009b0408 	addseq	r0, fp, r8, lsl #8
  70:	0b010000 	bleq	40078 <startup-0x1ffbff88>
  74:	0000dd1a 	andeq	sp, r0, sl, lsl sp
  78:	63030a00 	movwvs	r0, #14848	; 0x3a00
  7c:	01003172 	tsteq	r0, r2, ror r1
  80:	00dd1a0c 	sbcseq	r1, sp, ip, lsl #20
  84:	040c0000 	streq	r0, [ip], #-0
  88:	0000000f 	andeq	r0, r0, pc
  8c:	dd1a0d01 	ldcle	13, cr0, [sl, #-4]
  90:	0e000000 	cdpeq	0, 0, cr0, cr0, cr0, {0}
  94:	32726303 	rsbscc	r6, r2, #201326592	; 0xc000000
  98:	1a0e0100 	bne	3804a0 <startup-0x1fc7fb60>
  9c:	000000dd 	ldrdeq	r0, [r0], -sp
  a0:	00cd0410 	sbceq	r0, sp, r0, lsl r4
  a4:	0f010000 	svceq	0x00010000
  a8:	0000dd1a 	andeq	sp, r0, sl, lsl sp
  ac:	63031200 	movwvs	r1, #12800	; 0x3200
  b0:	01003372 	tsteq	r0, r2, ror r3
  b4:	00dd1a10 	sbcseq	r1, sp, r0, lsl sl
  b8:	04140000 	ldreq	r0, [r4], #-0
  bc:	000000d6 	ldrdeq	r0, [r0], -r6
  c0:	dd1a1101 	ldfles	f1, [sl, #-4]
  c4:	16000000 	strne	r0, [r0], -r0
  c8:	0000f204 	andeq	pc, r0, r4, lsl #4
  cc:	1a120100 	bne	4804d4 <startup-0x1fb7fb2c>
  d0:	000000dd 	ldrdeq	r0, [r0], -sp
  d4:	02050018 	andeq	r0, r5, #24
  d8:	0000df07 	andeq	sp, r0, r7, lsl #30
  dc:	00d60600 	sbcseq	r0, r6, r0, lsl #12
  e0:	00070000 	andeq	r0, r7, r0
  e4:	01000000 	mrseq	r0, (UNDEF: 0)
  e8:	00250313 	eoreq	r0, r5, r3, lsl r3
  ec:	f7080000 			; <UNDEFINED> instruction: 0xf7080000
  f0:	01000000 	mrseq	r0, (UNDEF: 0)
  f4:	00500621 	subseq	r0, r0, r1, lsr #12
  f8:	002a2000 	eoreq	r2, sl, r0
  fc:	9c010000 	stcls	0, cr0, [r1], {-0}
 100:	00000112 	andeq	r0, r0, r2, lsl r1
 104:	01007309 	tsteq	r0, r9, lsl #6
 108:	01121221 	tsteq	r2, r1, lsr #4
 10c:	91020000 	mrsls	r0, (UNDEF: 2)
 110:	040a0074 	streq	r0, [sl], #-116	; 0xffffff8c
 114:	00000118 	andeq	r0, r0, r8, lsl r1
 118:	56080105 	strpl	r0, [r8], -r5, lsl #2
 11c:	0b000001 	bleq	128 <startup-0x1ffffed8>
 120:	000000fd 	strdeq	r0, [r0], -sp
 124:	100d1701 	andne	r1, sp, r1, lsl #14
 128:	40200000 	eormi	r0, r0, r0
 12c:	01000000 	mrseq	r0, (UNDEF: 0)
 130:	0063099c 	mlseq	r3, ip, r9, r0
 134:	181d1701 	ldmdane	sp, {r0, r8, r9, sl, ip}
 138:	02000001 	andeq	r0, r0, #1
 13c:	00007791 	muleq	r0, r1, r7
 140:	00000155 	andeq	r0, r0, r5, asr r1
 144:	00b40004 	adcseq	r0, r4, r4
 148:	01040000 	mrseq	r0, (UNDEF: 4)
 14c:	00000020 	andeq	r0, r0, r0, lsr #32
 150:	0001160c 	andeq	r1, r1, ip, lsl #12
 154:	0000a400 	andeq	sl, r0, r0, lsl #8
 158:	00007c00 	andeq	r7, r0, r0, lsl #24
 15c:	0001e820 	andeq	lr, r1, r0, lsr #16
 160:	00007600 	andeq	r7, r0, r0, lsl #12
 164:	07040200 	streq	r0, [r4, -r0, lsl #4]
 168:	0000013a 	andeq	r0, r0, sl, lsr r1
 16c:	69050403 	stmdbvs	r5, {r0, r1, sl}
 170:	0400746e 	streq	r7, [r0], #-1134	; 0xfffffb92
 174:	0000002c 	andeq	r0, r0, ip, lsr #32
 178:	08050802 	stmdaeq	r5, {r1, fp}
 17c:	02000001 	andeq	r0, r0, #1
 180:	01760408 	cmneq	r6, r8, lsl #8
 184:	01020000 	mrseq	r0, (UNDEF: 2)
 188:	00014f06 	andeq	r4, r1, r6, lsl #30
 18c:	08010200 	stmdaeq	r1, {r9}
 190:	0000014d 	andeq	r0, r0, sp, asr #2
 194:	90050202 	andls	r0, r5, r2, lsl #4
 198:	02000001 	andeq	r0, r0, #1
 19c:	00df0702 	sbcseq	r0, pc, r2, lsl #14
 1a0:	04020000 	streq	r0, [r2], #-0
 1a4:	00010d05 	andeq	r0, r1, r5, lsl #26
 1a8:	07040200 	streq	r0, [r4, -r0, lsl #4]
 1ac:	00000135 	andeq	r0, r0, r5, lsr r1
 1b0:	30070802 	andcc	r0, r7, r2, lsl #16
 1b4:	02000001 	andeq	r0, r0, #1
 1b8:	01560801 	cmpeq	r6, r1, lsl #16
 1bc:	b6050000 	strlt	r0, [r5], -r0
 1c0:	01000001 	tsteq	r0, r1
 1c4:	00331540 	eorseq	r1, r3, r0, asr #10
 1c8:	03050000 	movweq	r0, #20480	; 0x5000
 1cc:	2000027c 	andcs	r0, r0, ip, ror r2
 1d0:	00015b05 	andeq	r5, r1, r5, lsl #22
 1d4:	15410100 	strbne	r0, [r1, #-256]	; 0xffffff00
 1d8:	00000033 	andeq	r0, r0, r3, lsr r0
 1dc:	02800305 	addeq	r0, r0, #335544320	; 0x14000000
 1e0:	70062000 	andvc	r2, r6, r0
 1e4:	01000001 	tsteq	r0, r1
 1e8:	00330e42 	eorseq	r0, r3, r2, asr #28
 1ec:	03050000 	movweq	r0, #20480	; 0x5000
 1f0:	20000284 	andcs	r0, r0, r4, lsl #5
 1f4:	0001bb06 	andeq	fp, r1, r6, lsl #22
 1f8:	0e430100 	dvfeqs	f0, f3, f0
 1fc:	00000033 	andeq	r0, r0, r3, lsr r0
 200:	02880305 	addeq	r0, r8, #335544320	; 0x14000000
 204:	61062000 	mrsvs	r2, (UNDEF: 6)
 208:	01000001 	tsteq	r0, r1
 20c:	00330e44 	eorseq	r0, r3, r4, asr #28
 210:	03050000 	movweq	r0, #20480	; 0x5000
 214:	2000028c 	andcs	r0, r0, ip, lsl #5
 218:	00019a07 	andeq	r9, r1, r7, lsl #20
 21c:	06830100 	streq	r0, [r3], r0, lsl #2
 220:	200001c4 	andcs	r0, r0, r4, asr #3
 224:	000000a0 	andeq	r0, r0, r0, lsr #1
 228:	a8079c01 	stmdage	r7, {r0, sl, fp, ip, pc}
 22c:	01000001 	tsteq	r0, r1
 230:	01900679 	orrseq	r0, r0, r9, ror r6
 234:	00342000 	eorseq	r2, r4, r0
 238:	9c010000 	stcls	0, cr0, [r1], {-0}
 23c:	00018207 	andeq	r8, r1, r7, lsl #4
 240:	06700100 	ldrbteq	r0, [r0], -r0, lsl #2
 244:	20000162 	andcs	r0, r0, r2, ror #2
 248:	0000002e 	andeq	r0, r0, lr, lsr #32
 24c:	22089c01 	andcs	r9, r8, #256	; 0x100
 250:	01000001 	tsteq	r0, r1
 254:	0150066a 	cmpeq	r0, sl, ror #12
 258:	00122000 	andseq	r2, r2, r0
 25c:	9c010000 	stcls	0, cr0, [r1], {-0}
 260:	00000134 	andeq	r0, r0, r4, lsr r1
 264:	00014705 	andeq	r4, r1, r5, lsl #14
 268:	066c0100 	strbteq	r0, [ip], -r0, lsl #2
 26c:	0000002c 	andeq	r0, r0, ip, lsr #32
 270:	00749102 	rsbseq	r9, r4, r2, lsl #2
 274:	00016707 	andeq	r6, r1, r7, lsl #14
 278:	064f0100 	strbeq	r0, [pc], -r0, lsl #2
 27c:	20000098 	mulcs	r0, r8, r0
 280:	000000b8 	strheq	r0, [r0], -r8
 284:	1d099c01 	stcne	12, cr9, [r9, #-4]
 288:	01000001 	tsteq	r0, r1
 28c:	007c0646 	rsbseq	r0, ip, r6, asr #12
 290:	001c2000 	andseq	r2, ip, r0
 294:	9c010000 	stcls	0, cr0, [r1], {-0}
 298:	00007c00 	andeq	r7, r0, r0, lsl #24
 29c:	59000400 	stmdbpl	r0, {sl}
 2a0:	04000001 	streq	r0, [r0], #-1
 2a4:	00002001 	andeq	r2, r0, r1
 2a8:	01fe0c00 	mvnseq	r0, r0, lsl #24
 2ac:	00a40000 	adceq	r0, r4, r0
	...
 2b8:	01710000 	cmneq	r1, r0
 2bc:	ea020000 	b	802c4 <startup-0x1ff7fd3c>
 2c0:	01000001 	tsteq	r0, r1
 2c4:	02760624 	rsbseq	r0, r6, #36, 12	; 0x2400000
 2c8:	00062000 	andeq	r2, r6, r0
 2cc:	9c010000 	stcls	0, cr0, [r1], {-0}
 2d0:	00020802 	andeq	r0, r2, r2, lsl #16
 2d4:	061d0100 	ldreq	r0, [sp], -r0, lsl #2
 2d8:	20000270 	andcs	r0, r0, r0, ror r2
 2dc:	00000006 	andeq	r0, r0, r6
 2e0:	c3029c01 	movwgt	r9, #11265	; 0x2c01
 2e4:	01000001 	tsteq	r0, r1
 2e8:	026a0616 	rsbeq	r0, sl, #23068672	; 0x1600000
 2ec:	00062000 	andeq	r2, r6, r0
 2f0:	9c010000 	stcls	0, cr0, [r1], {-0}
 2f4:	0001d802 	andeq	sp, r1, r2, lsl #16
 2f8:	060f0100 	streq	r0, [pc], -r0, lsl #2
 2fc:	20000264 	andcs	r0, r0, r4, ror #4
 300:	00000006 	andeq	r0, r0, r6
 304:	1a029c01 	bne	a7310 <startup-0x1ff58cf0>
 308:	01000002 	tsteq	r0, r2
 30c:	00000106 	andeq	r0, r0, r6, lsl #2
 310:	000c2000 	andeq	r2, ip, r0
 314:	9c010000 	stcls	0, cr0, [r1], {-0}
	...

Disassembly of section .debug_abbrev:

00000000 <.debug_abbrev>:
   0:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
   4:	030b130e 	movweq	r1, #45838	; 0xb30e
   8:	110e1b0e 	tstne	lr, lr, lsl #22
   c:	10061201 	andne	r1, r6, r1, lsl #4
  10:	02000017 	andeq	r0, r0, #23
  14:	0b0b0113 	bleq	2c0468 <startup-0x1fd3fb98>
  18:	0b3b0b3a 	bleq	ec2d08 <startup-0x1f13d2f8>
  1c:	13010b39 	movwne	r0, #6969	; 0x1b39
  20:	0d030000 	stceq	0, cr0, [r3, #-0]
  24:	3a080300 	bcc	200c2c <startup-0x1fdff3d4>
  28:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  2c:	3813490b 	ldmdacc	r3, {r0, r1, r3, r8, fp, lr}
  30:	0400000b 	streq	r0, [r0], #-11
  34:	0e03000d 	cdpeq	0, 0, cr0, cr3, cr13, {0}
  38:	0b3b0b3a 	bleq	ec2d28 <startup-0x1f13d2d8>
  3c:	13490b39 	movtne	r0, #39737	; 0x9b39
  40:	00000b38 	andeq	r0, r0, r8, lsr fp
  44:	0b002405 	bleq	9060 <startup-0x1fff6fa0>
  48:	030b3e0b 	movweq	r3, #48651	; 0xbe0b
  4c:	0600000e 	streq	r0, [r0], -lr
  50:	13490035 	movtne	r0, #36917	; 0x9035
  54:	16070000 	strne	r0, [r7], -r0
  58:	3a0e0300 	bcc	380c60 <startup-0x1fc7f3a0>
  5c:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
  60:	0013490b 	andseq	r4, r3, fp, lsl #18
  64:	012e0800 			; <UNDEFINED> instruction: 0x012e0800
  68:	0e03193f 			; <UNDEFINED> instruction: 0x0e03193f
  6c:	0b3b0b3a 	bleq	ec2d5c <startup-0x1f13d2a4>
  70:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  74:	06120111 			; <UNDEFINED> instruction: 0x06120111
  78:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  7c:	00130119 	andseq	r0, r3, r9, lsl r1
  80:	00050900 	andeq	r0, r5, r0, lsl #18
  84:	0b3a0803 	bleq	e82098 <startup-0x1f17df68>
  88:	0b390b3b 	bleq	e42d7c <startup-0x1f1bd284>
  8c:	18021349 	stmdane	r2, {r0, r3, r6, r8, r9, ip}
  90:	0f0a0000 	svceq	0x000a0000
  94:	490b0b00 	stmdbmi	fp, {r8, r9, fp}
  98:	0b000013 	bleq	ec <startup-0x1fffff14>
  9c:	0e03012e 	adfeqsp	f0, f3, #0.5
  a0:	0b3b0b3a 	bleq	ec2d90 <startup-0x1f13d270>
  a4:	19270b39 	stmdbne	r7!, {r0, r3, r4, r5, r8, r9, fp}
  a8:	06120111 			; <UNDEFINED> instruction: 0x06120111
  ac:	42961840 	addsmi	r1, r6, #64, 16	; 0x400000
  b0:	00000019 	andeq	r0, r0, r9, lsl r0
  b4:	25011101 	strcs	r1, [r1, #-257]	; 0xfffffeff
  b8:	030b130e 	movweq	r1, #45838	; 0xb30e
  bc:	110e1b0e 	tstne	lr, lr, lsl #22
  c0:	10061201 	andne	r1, r6, r1, lsl #4
  c4:	02000017 	andeq	r0, r0, #23
  c8:	0b0b0024 	bleq	2c0160 <startup-0x1fd3fea0>
  cc:	0e030b3e 	vmoveq.16	d3[0], r0
  d0:	24030000 	strcs	r0, [r3], #-0
  d4:	3e0b0b00 	vmlacc.f64	d0, d11, d0
  d8:	0008030b 	andeq	r0, r8, fp, lsl #6
  dc:	00350400 	eorseq	r0, r5, r0, lsl #8
  e0:	00001349 	andeq	r1, r0, r9, asr #6
  e4:	03003405 	movweq	r3, #1029	; 0x405
  e8:	3b0b3a0e 	blcc	2ce928 <startup-0x1fd316d8>
  ec:	490b390b 	stmdbmi	fp, {r0, r1, r3, r8, fp, ip, sp}
  f0:	00180213 	andseq	r0, r8, r3, lsl r2
  f4:	00340600 	eorseq	r0, r4, r0, lsl #12
  f8:	0b3a0e03 	bleq	e8390c <startup-0x1f17c6f4>
  fc:	0b390b3b 	bleq	e42df0 <startup-0x1f1bd210>
 100:	193f1349 	ldmdbne	pc!, {r0, r3, r6, r8, r9, ip}	; <UNPREDICTABLE>
 104:	00001802 	andeq	r1, r0, r2, lsl #16
 108:	3f002e07 	svccc	0x00002e07
 10c:	3a0e0319 	bcc	380d78 <startup-0x1fc7f288>
 110:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 114:	1119270b 	tstne	r9, fp, lsl #14
 118:	40061201 	andmi	r1, r6, r1, lsl #4
 11c:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 120:	2e080000 	cdpcs	0, 0, cr0, cr8, cr0, {0}
 124:	03193f01 	tsteq	r9, #1, 30
 128:	3b0b3a0e 	blcc	2ce968 <startup-0x1fd31698>
 12c:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 130:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 134:	97184006 	ldrls	r4, [r8, -r6]
 138:	13011942 	movwne	r1, #6466	; 0x1942
 13c:	2e090000 	cdpcs	0, 0, cr0, cr9, cr0, {0}
 140:	03193f00 	tsteq	r9, #0, 30
 144:	3b0b3a0e 	blcc	2ce984 <startup-0x1fd3167c>
 148:	270b390b 	strcs	r3, [fp, -fp, lsl #18]
 14c:	12011119 	andne	r1, r1, #1073741830	; 0x40000006
 150:	96184006 	ldrls	r4, [r8], -r6
 154:	00001942 	andeq	r1, r0, r2, asr #18
 158:	01110100 	tsteq	r1, r0, lsl #2
 15c:	0b130e25 	bleq	4c39f8 <startup-0x1fb3c608>
 160:	0e1b0e03 	cdpeq	14, 1, cr0, cr11, cr3, {0}
 164:	01111755 	tsteq	r1, r5, asr r7
 168:	00001710 	andeq	r1, r0, r0, lsl r7
 16c:	3f002e02 	svccc	0x00002e02
 170:	3a0e0319 	bcc	380ddc <startup-0x1fc7f224>
 174:	390b3b0b 	stmdbcc	fp, {r0, r1, r3, r8, r9, fp, ip, sp}
 178:	1119270b 	tstne	r9, fp, lsl #14
 17c:	40061201 	andmi	r1, r6, r1, lsl #4
 180:	19429718 	stmdbne	r2, {r3, r4, r8, r9, sl, ip, pc}^
 184:	Address 0x0000000000000184 is out of bounds.


Disassembly of section .debug_aranges:

00000000 <.debug_aranges>:
   0:	0000001c 	andeq	r0, r0, ip, lsl r0
   4:	00000002 	andeq	r0, r0, r2
   8:	00040000 	andeq	r0, r4, r0
   c:	00000000 	andeq	r0, r0, r0
  10:	20000010 	andcs	r0, r0, r0, lsl r0
  14:	0000006a 	andeq	r0, r0, sl, rrx
	...
  20:	0000001c 	andeq	r0, r0, ip, lsl r0
  24:	01400002 	cmpeq	r0, r2
  28:	00040000 	andeq	r0, r4, r0
  2c:	00000000 	andeq	r0, r0, r0
  30:	2000007c 	andcs	r0, r0, ip, ror r0
  34:	000001e8 	andeq	r0, r0, r8, ror #3
	...
  40:	00000024 	andeq	r0, r0, r4, lsr #32
  44:	02990002 	addseq	r0, r9, #2
  48:	00040000 	andeq	r0, r4, r0
  4c:	00000000 	andeq	r0, r0, r0
  50:	20000264 	andcs	r0, r0, r4, ror #4
  54:	00000018 	andeq	r0, r0, r8, lsl r0
  58:	20000000 	andcs	r0, r0, r0
  5c:	0000000c 	andeq	r0, r0, ip
	...

Disassembly of section .debug_line:

00000000 <.debug_line>:
   0:	00000072 	andeq	r0, r0, r2, ror r0
   4:	001e0003 	andseq	r0, lr, r3
   8:	01020000 	mrseq	r0, (UNDEF: 2)
   c:	000d0efb 	strdeq	r0, [sp], -fp
  10:	01010101 	tsteq	r1, r1, lsl #2
  14:	01000000 	mrseq	r0, (UNDEF: 0)
  18:	00010000 	andeq	r0, r1, r0
  1c:	75626564 	strbvc	r6, [r2, #-1380]!	; 0xfffffa9c
  20:	00632e67 	rsbeq	r2, r3, r7, ror #28
  24:	00000000 	andeq	r0, r0, r0
  28:	05002005 	streq	r2, [r0, #-5]
  2c:	00001002 	andeq	r1, r0, r2
  30:	01160320 	tsteq	r6, r0, lsr #6
  34:	05680805 	strbeq	r0, [r8, #-2053]!	; 0xfffff7fb
  38:	04020010 	streq	r0, [r2], #-16
  3c:	15052001 	strne	r2, [r5, #-1]
  40:	01040200 	mrseq	r0, R12_usr
  44:	0008053c 	andeq	r0, r8, ip, lsr r5
  48:	3c010402 	cfstrscc	mvf0, [r1], {2}
  4c:	200f0522 	andcs	r0, pc, r2, lsr #10
  50:	053c0d05 	ldreq	r0, [ip, #-3333]!	; 0xfffff2fb
  54:	03052105 	movweq	r2, #20741	; 0x5105
  58:	3e01054b 	cfsh32cc	mvfx0, mvfx1, #43
  5c:	05681505 	strbeq	r1, [r8, #-1285]!	; 0xfffffafb
  60:	11054b08 	tstne	r5, r8, lsl #22
  64:	3c030521 	cfstr32cc	mvfx0, [r3], {33}	; 0x21
  68:	05490905 	strbeq	r0, [r9, #-2309]	; 0xfffff6fb
  6c:	01052e08 	tsteq	r5, r8, lsl #28
  70:	00050231 	andeq	r0, r5, r1, lsr r2
  74:	00f70101 	rscseq	r0, r7, r1, lsl #2
  78:	00030000 	andeq	r0, r3, r0
  7c:	0000001d 	andeq	r0, r0, sp, lsl r0
  80:	0efb0102 	cdpeq	1, 15, cr0, cr11, cr2, {0}
  84:	0101000d 	tsteq	r1, sp
  88:	00000101 	andeq	r0, r0, r1, lsl #2
  8c:	00000100 	andeq	r0, r0, r0, lsl #2
  90:	616d0001 	cmnvs	sp, r1
  94:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
  98:	00000000 	andeq	r0, r0, r0
  9c:	00010500 	andeq	r0, r1, r0, lsl #10
  a0:	007c0205 	rsbseq	r0, ip, r5, lsl #4
  a4:	c6032000 	strgt	r2, [r3], -r0
  a8:	02050100 	andeq	r0, r5, #0, 2
  ac:	000c052f 	andeq	r0, ip, pc, lsr #10
  b0:	31010402 	tstcc	r1, r2, lsl #8
  b4:	02000305 	andeq	r0, r0, #335544320	; 0x14000000
  b8:	052e0104 	streq	r0, [lr, #-260]!	; 0xfffffefc
  bc:	0402000c 	streq	r0, [r2], #-12
  c0:	01052001 	tsteq	r5, r1
  c4:	30020579 	andcc	r0, r2, r9, ror r5
  c8:	30202205 	eorcc	r2, r0, r5, lsl #4
  cc:	05760205 	ldrbeq	r0, [r6, #-517]!	; 0xfffffdfb
  d0:	02052022 	andeq	r2, r5, #34	; 0x22
  d4:	200b0531 	andcs	r0, fp, r1, lsr r5
  d8:	05310205 	ldreq	r0, [r1, #-517]!	; 0xfffffdfb
  dc:	0c052025 	stceq	0, cr2, [r5], {37}	; 0x25
  e0:	670d0530 	smladxvs	sp, r0, r5, r0
  e4:	4c020567 	cfstr32mi	mvfx0, [r2], {103}	; 0x67
  e8:	05201005 	streq	r1, [r0, #-5]!
  ec:	10052f02 	andne	r2, r5, r2, lsl #30
  f0:	2f020520 	svccs	0x00020520
  f4:	05201005 	streq	r1, [r0, #-5]!
  f8:	0105300e 	tsteq	r5, lr
  fc:	15270276 	strne	r0, [r7, #-630]!	; 0xfffffd8a
 100:	053d0605 	ldreq	r0, [sp, #-1541]!	; 0xfffff9fb
 104:	054c3101 	strbeq	r3, [ip, #-257]	; 0xfffffeff
 108:	0f052f06 	svceq	0x00052f06
 10c:	2e05052e 	cfsh32cs	mvfx0, mvfx5, #30
 110:	05220905 	streq	r0, [r2, #-2309]!	; 0xfffff6fb
 114:	01053d0c 	tsteq	r5, ip, lsl #26
 118:	06057669 	streq	r7, [r5], -r9, ror #12
 11c:	2e0f052f 	cfsh32cs	mvfx0, mvfx15, #31
 120:	052e0505 	streq	r0, [lr, #-1285]!	; 0xfffffafb
 124:	0805220c 	stmdaeq	r5, {r2, r3, r9, sp}
 128:	5a010567 	bpl	416cc <startup-0x1ffbe934>
 12c:	2f060586 	svccs	0x00060586
 130:	052e0f05 	streq	r0, [lr, #-3845]!	; 0xfffff0fb
 134:	0c052e05 	stceq	14, cr2, [r5], {5}
 138:	67070522 	strvs	r0, [r7, -r2, lsr #10]
 13c:	053c1205 	ldreq	r1, [ip, #-517]!	; 0xfffffdfb
 140:	0f053c06 	svceq	0x00053c06
 144:	83090522 	movwhi	r0, #38178	; 0x9522
 148:	055a0705 	ldrbeq	r0, [sl, #-1797]	; 0xfffff8fb
 14c:	06053c12 			; <UNDEFINED> instruction: 0x06053c12
 150:	220f053c 	andcs	r0, pc, #60, 10	; 0xf000000
 154:	05830a05 	streq	r0, [r3, #2565]	; 0xa05
 158:	12053e07 	andne	r3, r5, #7, 28	; 0x70
 15c:	3c06053c 	cfstr32cc	mvfx0, [r6], {60}	; 0x3c
 160:	05220f05 	streq	r0, [r2, #-3845]!	; 0xfffff0fb
 164:	10058405 	andne	r8, r5, r5, lsl #8
 168:	34010520 	strcc	r0, [r1], #-1312	; 0xfffffae0
 16c:	01000b02 	tsteq	r0, r2, lsl #22
 170:	00006e01 	andeq	r6, r0, r1, lsl #28
 174:	20000300 	andcs	r0, r0, r0, lsl #6
 178:	02000000 	andeq	r0, r0, #0
 17c:	0d0efb01 	vstreq	d15, [lr, #-4]
 180:	01010100 	mrseq	r0, (UNDEF: 17)
 184:	00000001 	andeq	r0, r0, r1
 188:	01000001 	tsteq	r0, r1
 18c:	61747300 	cmnvs	r4, r0, lsl #6
 190:	70757472 	rsbsvc	r7, r5, r2, ror r4
 194:	0000632e 	andeq	r6, r0, lr, lsr #6
 198:	05000000 	streq	r0, [r0, #-0]
 19c:	0205000f 	andeq	r0, r5, #15
 1a0:	20000000 	andcs	r0, r0, r0
 1a4:	13020517 	movwne	r0, #9495	; 0x2517
 1a8:	052f2121 	streq	r2, [pc, #-289]!	; 8f <startup-0x1fffff71>
 1ac:	03022101 	movweq	r2, #8449	; 0x2101
 1b0:	05010100 	streq	r0, [r1, #-256]	; 0xffffff00
 1b4:	02050001 	andeq	r0, r5, #1
 1b8:	20000264 	andcs	r0, r0, r4, ror #4
 1bc:	05010f03 	streq	r0, [r1, #-3843]	; 0xfffff0fd
 1c0:	05132102 	ldreq	r2, [r3, #-258]	; 0xfffffefe
 1c4:	05242101 	streq	r2, [r4, #-257]!	; 0xfffffeff
 1c8:	05132102 	ldreq	r2, [r3, #-258]	; 0xfffffefe
 1cc:	05242101 	streq	r2, [r4, #-257]!	; 0xfffffeff
 1d0:	05132102 	ldreq	r2, [r3, #-258]	; 0xfffffefe
 1d4:	05242101 	streq	r2, [r4, #-257]!	; 0xfffffeff
 1d8:	05132102 	ldreq	r2, [r3, #-258]	; 0xfffffefe
 1dc:	01022101 	tsteq	r2, r1, lsl #2
 1e0:	Address 0x00000000000001e0 is out of bounds.


Disassembly of section .debug_str:

00000000 <.debug_str>:
   0:	72617355 	rsbvc	r7, r1, #1409286145	; 0x54000001
   4:	755f0074 	ldrbvc	r0, [pc, #-116]	; ffffff98 <count+0xdffffd0c>
   8:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
   c:	5f003064 	svcpl	0x00003064
  10:	73756e75 	cmnvc	r5, #1872	; 0x750
  14:	00336465 	eorseq	r6, r3, r5, ror #8
  18:	75626564 	strbvc	r6, [r2, #-1380]!	; 0xfffffa9c
  1c:	00632e67 	rsbeq	r2, r3, r7, ror #28
  20:	20554e47 	subscs	r4, r5, r7, asr #28
  24:	20373143 	eorscs	r3, r7, r3, asr #2
  28:	332e3031 			; <UNDEFINED> instruction: 0x332e3031
  2c:	3220312e 	eorcc	r3, r0, #-2147483637	; 0x8000000b
  30:	30313230 	eorscc	r3, r1, r0, lsr r2
  34:	20343238 	eorscs	r3, r4, r8, lsr r2
  38:	6c657228 	sfmvs	f7, 2, [r5], #-160	; 0xffffff60
  3c:	65736165 	ldrbvs	r6, [r3, #-357]!	; 0xfffffe9b
  40:	6d2d2029 	stcvs	0, cr2, [sp, #-164]!	; 0xffffff5c
  44:	6d756874 	ldclvs	8, cr6, [r5, #-464]!	; 0xfffffe30
  48:	6d2d2062 	stcvs	0, cr2, [sp, #-392]!	; 0xfffffe78
  4c:	752d6f6e 	strvc	r6, [sp, #-3950]!	; 0xfffff092
  50:	696c616e 	stmdbvs	ip!, {r1, r2, r3, r5, r6, r8, sp, lr}^
  54:	64656e67 	strbtvs	r6, [r5], #-3687	; 0xfffff199
  58:	6363612d 	cmnvs	r3, #1073741835	; 0x4000000b
  5c:	20737365 	rsbscs	r7, r3, r5, ror #6
  60:	6c666d2d 	stclvs	13, cr6, [r6], #-180	; 0xffffff4c
  64:	2d74616f 	ldfcse	f6, [r4, #-444]!	; 0xfffffe44
  68:	3d696261 	sfmcc	f6, 2, [r9, #-388]!	; 0xfffffe7c
  6c:	74666f73 	strbtvc	r6, [r6], #-3955	; 0xfffff08d
  70:	616d2d20 	cmnvs	sp, r0, lsr #26
  74:	3d686372 	stclcc	3, cr6, [r8, #-456]!	; 0xfffffe38
  78:	766d7261 	strbtvc	r7, [sp], -r1, ror #4
  7c:	206d2d36 	rsbcs	r2, sp, r6, lsr sp
  80:	2d20672d 	stccs	7, cr6, [r0, #-180]!	; 0xffffff4c
  84:	2d20304f 	stccs	0, cr3, [r0, #-316]!	; 0xfffffec4
  88:	3d647473 	cfstrdcc	mvd7, [r4, #-460]!	; 0xfffffe34
  8c:	31756e67 	cmncc	r5, r7, ror #28
  90:	755f0037 	ldrbvc	r0, [pc, #-55]	; 61 <startup-0x1fffff9f>
  94:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
  98:	5f003164 	svcpl	0x00003164
  9c:	73756e75 	cmnvc	r5, #1872	; 0x750
  a0:	00326465 	eorseq	r6, r2, r5, ror #8
  a4:	6573552f 	ldrbvs	r5, [r3, #-1327]!	; 0xfffffad1
  a8:	632f7372 			; <UNDEFINED> instruction: 0x632f7372
  ac:	72746568 	rsbsvc	r6, r4, #104, 10	; 0x1a000000
  b0:	442f6e61 	strtmi	r6, [pc], #-3681	; b8 <startup-0x1fffff48>
  b4:	6d75636f 	ldclvs	3, cr6, [r5, #-444]!	; 0xfffffe44
  b8:	73746e65 	cmnvc	r4, #1616	; 0x650
  bc:	6f6b532f 	svcvs	0x006b532f
  c0:	4d2f616c 	stfmis	f6, [pc, #-432]!	; ffffff18 <count+0xdffffc8c>
  c4:	4d2f504f 	stcmi	0, cr5, [pc, #-316]!	; ffffff90 <count+0xdffffd04>
  c8:	37303444 	ldrcc	r3, [r0, -r4, asr #8]!
  cc:	6e755f00 	cdpvs	15, 7, cr5, cr5, cr0, {0}
  d0:	64657375 	strbtvs	r7, [r5], #-885	; 0xfffffc8b
  d4:	755f0034 	ldrbvc	r0, [pc, #-52]	; a8 <startup-0x1fffff58>
  d8:	6573756e 	ldrbvs	r7, [r3, #-1390]!	; 0xfffffa92
  dc:	73003564 	movwvc	r3, #1380	; 0x564
  e0:	74726f68 	ldrbtvc	r6, [r2], #-3944	; 0xfffff098
  e4:	736e7520 	cmnvc	lr, #32, 10	; 0x8000000
  e8:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
  ec:	6e692064 	cdpvs	0, 6, cr2, cr9, cr4, {3}
  f0:	74670074 	strbtvc	r0, [r7], #-116	; 0xffffff8c
  f4:	70007270 	andvc	r7, r0, r0, ror r2
  f8:	746e6972 	strbtvc	r6, [lr], #-2418	; 0xfffff68e
  fc:	69727000 	ldmdbvs	r2!, {ip, sp, lr}^
 100:	635f746e 	cmpvs	pc, #1845493760	; 0x6e000000
 104:	00726168 	rsbseq	r6, r2, r8, ror #2
 108:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 10c:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
 110:	6e692067 	cdpvs	0, 6, cr2, cr9, cr7, {3}
 114:	616d0074 	smcvs	53252	; 0xd004
 118:	632e6e69 			; <UNDEFINED> instruction: 0x632e6e69
 11c:	69616d00 	stmdbvs	r1!, {r8, sl, fp, sp, lr}^
 120:	7865006e 	stmdavc	r5!, {r1, r2, r3, r5, r6}^
 124:	5f327469 	svcpl	0x00327469
 128:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
 12c:	0072656c 	rsbseq	r6, r2, ip, ror #10
 130:	676e6f6c 	strbvs	r6, [lr, -ip, ror #30]!
 134:	6e6f6c20 	cdpvs	12, 6, cr6, cr15, cr0, {1}
 138:	6e752067 	cdpvs	0, 7, cr2, cr5, cr7, {3}
 13c:	6e676973 			; <UNDEFINED> instruction: 0x6e676973
 140:	69206465 	stmdbvs	r0!, {r0, r2, r5, r6, sl, sp, lr}
 144:	6c00746e 	cfstrsvs	mvf7, [r0], {110}	; 0x6e
 148:	61706d61 	cmnvs	r0, r1, ror #26
 14c:	736e7500 	cmnvc	lr, #0, 10
 150:	656e6769 	strbvs	r6, [lr, #-1897]!	; 0xfffff897
 154:	68632064 	stmdavs	r3!, {r2, r5, r6, sp}^
 158:	64007261 	strvs	r7, [r0], #-609	; 0xfffffd9f
 15c:	79616c65 	stmdbvc	r1!, {r0, r2, r5, r6, sl, fp, sp, lr}^
 160:	756f635f 	strbvc	r6, [pc, #-863]!	; fffffe09 <count+0xdffffb7d>
 164:	6900746e 	stmdbvs	r0, {r1, r2, r3, r5, r6, sl, ip, sp, lr}
 168:	5f74696e 	svcpl	0x0074696e
 16c:	00707061 	rsbseq	r7, r0, r1, rrx
 170:	6b636974 	blvs	18da748 <startup-0x1e7258b8>
 174:	6f6c0073 	svcvs	0x006c0073
 178:	6420676e 	strtvs	r6, [r0], #-1902	; 0xfffff892
 17c:	6c62756f 	cfstr64vs	mvdx7, [r2], #-444	; 0xfffffe44
 180:	78650065 	stmdavc	r5!, {r0, r2, r5, r6}^
 184:	5f317469 	svcpl	0x00317469
 188:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
 18c:	0072656c 	rsbseq	r6, r2, ip, ror #10
 190:	726f6873 	rsbvc	r6, pc, #7536640	; 0x730000
 194:	6e692074 	mcrvs	0, 3, r2, cr9, cr4, {3}
 198:	78650074 	stmdavc	r5!, {r2, r4, r5, r6}^
 19c:	5f336974 	svcpl	0x00336974
 1a0:	646e6168 	strbtvs	r6, [lr], #-360	; 0xfffffe98
 1a4:	0072656c 	rsbseq	r6, r2, ip, ror #10
 1a8:	74697865 	strbtvc	r7, [r9], #-2149	; 0xfffff79b
 1ac:	61685f30 	cmnvs	r8, r0, lsr pc
 1b0:	656c646e 	strbvs	r6, [ip, #-1134]!	; 0xfffffb92
 1b4:	6c660072 	stclvs	0, cr0, [r6], #-456	; 0xfffffe38
 1b8:	73006761 	movwvc	r6, #1889	; 0x761
 1bc:	6e6f6365 	cdpvs	3, 6, cr6, cr15, cr5, {3}
 1c0:	67007364 	strvs	r7, [r0, -r4, ror #6]
 1c4:	68706172 	ldmdavs	r0!, {r1, r4, r5, r6, r8, sp, lr}^
 1c8:	635f6369 	cmpvs	pc, #-1543503871	; 0xa4000001
 1cc:	7261656c 	rsbvc	r6, r1, #108, 10	; 0x1b000000
 1d0:	7263735f 	rsbvc	r7, r3, #2080374785	; 0x7c000001
 1d4:	006e6565 	rsbeq	r6, lr, r5, ror #10
 1d8:	70617267 	rsbvc	r7, r1, r7, ror #4
 1dc:	5f636968 	svcpl	0x00636968
 1e0:	74696e69 	strbtvc	r6, [r9], #-3689	; 0xfffff197
 1e4:	7a696c61 	bvc	1a5b370 <startup-0x1e5a4c90>
 1e8:	72670065 	rsbvc	r0, r7, #101	; 0x65
 1ec:	69687061 	stmdbvs	r8!, {r0, r5, r6, ip, sp, lr}^
 1f0:	69705f63 	ldmdbvs	r0!, {r0, r1, r5, r6, r8, r9, sl, fp, ip, lr}^
 1f4:	5f6c6578 	svcpl	0x006c6578
 1f8:	61656c63 	cmnvs	r5, r3, ror #24
 1fc:	74730072 	ldrbtvc	r0, [r3], #-114	; 0xffffff8e
 200:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
 204:	00632e70 	rsbeq	r2, r3, r0, ror lr
 208:	70617267 	rsbvc	r7, r1, r7, ror #4
 20c:	5f636968 	svcpl	0x00636968
 210:	65786970 	ldrbvs	r6, [r8, #-2416]!	; 0xfffff690
 214:	65735f6c 	ldrbvs	r5, [r3, #-3948]!	; 0xfffff094
 218:	74730074 	ldrbtvc	r0, [r3], #-116	; 0xffffff8c
 21c:	75747261 	ldrbvc	r7, [r4, #-609]!	; 0xfffffd9f
 220:	Address 0x0000000000000220 is out of bounds.


Disassembly of section .comment:

00000000 <.comment>:
   0:	3a434347 	bcc	10d0d24 <startup-0x1ef2f2dc>
   4:	4e472820 	cdpmi	8, 4, cr2, cr7, cr0, {1}
   8:	72412055 	subvc	r2, r1, #85	; 0x55
   c:	6d45206d 	stclvs	0, cr2, [r5, #-436]	; 0xfffffe4c
  10:	64646562 	strbtvs	r6, [r4], #-1378	; 0xfffffa9e
  14:	54206465 	strtpl	r6, [r0], #-1125	; 0xfffffb9b
  18:	636c6f6f 	cmnvs	ip, #444	; 0x1bc
  1c:	6e696168 	powvsez	f6, f1, #0.0
  20:	2e303120 	rsfcssp	f3, f0, f0
  24:	30322d33 	eorscc	r2, r2, r3, lsr sp
  28:	312e3132 			; <UNDEFINED> instruction: 0x312e3132
  2c:	31202930 			; <UNDEFINED> instruction: 0x31202930
  30:	2e332e30 	mrccs	14, 1, r2, cr3, cr0, {1}
  34:	30322031 	eorscc	r2, r2, r1, lsr r0
  38:	38303132 	ldmdacc	r0!, {r1, r4, r5, r8, ip, sp}
  3c:	28203432 	stmdacs	r0!, {r1, r4, r5, sl, ip, sp}
  40:	656c6572 	strbvs	r6, [ip, #-1394]!	; 0xfffffa8e
  44:	29657361 	stmdbcs	r5!, {r0, r5, r6, r8, r9, ip, sp, lr}^
	...

Disassembly of section .ARM.attributes:

00000000 <.ARM.attributes>:
   0:	00002a41 	andeq	r2, r0, r1, asr #20
   4:	61656100 	cmnvs	r5, r0, lsl #2
   8:	01006962 	tsteq	r0, r2, ror #18
   c:	00000020 	andeq	r0, r0, r0, lsr #32
  10:	4d2d3605 	stcmi	6, cr3, [sp, #-20]!	; 0xffffffec
  14:	070b0600 	streq	r0, [fp, -r0, lsl #12]
  18:	1201094d 	andne	r0, r1, #1261568	; 0x134000
  1c:	15011404 	strne	r1, [r1, #-1028]	; 0xfffffbfc
  20:	18031701 	stmdane	r3, {r0, r8, r9, sl, ip}
  24:	1a011901 	bne	46430 <startup-0x1ffb9bd0>
  28:	Address 0x0000000000000028 is out of bounds.


Disassembly of section .debug_frame:

00000000 <.debug_frame>:
   0:	0000000c 	andeq	r0, r0, ip
   4:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
   8:	7c020001 	stcvc	0, cr0, [r2], {1}
   c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  10:	0000001c 	andeq	r0, r0, ip, lsl r0
  14:	00000000 	andeq	r0, r0, r0
  18:	20000010 	andcs	r0, r0, r0, lsl r0
  1c:	00000040 	andeq	r0, r0, r0, asr #32
  20:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  24:	41018e02 	tstmi	r1, r2, lsl #28
  28:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  2c:	00000007 	andeq	r0, r0, r7
  30:	0000001c 	andeq	r0, r0, ip, lsl r0
  34:	00000000 	andeq	r0, r0, r0
  38:	20000050 	andcs	r0, r0, r0, asr r0
  3c:	0000002a 	andeq	r0, r0, sl, lsr #32
  40:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  44:	41018e02 	tstmi	r1, r2, lsl #28
  48:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  4c:	00000007 	andeq	r0, r0, r7
  50:	0000000c 	andeq	r0, r0, ip
  54:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
  58:	7c020001 	stcvc	0, cr0, [r2], {1}
  5c:	000d0c0e 	andeq	r0, sp, lr, lsl #24
  60:	00000018 	andeq	r0, r0, r8, lsl r0
  64:	00000050 	andeq	r0, r0, r0, asr r0
  68:	2000007c 	andcs	r0, r0, ip, ror r0
  6c:	0000001c 	andeq	r0, r0, ip, lsl r0
  70:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  74:	41018e02 	tstmi	r1, r2, lsl #28
  78:	0000070d 	andeq	r0, r0, sp, lsl #14
  7c:	00000018 	andeq	r0, r0, r8, lsl r0
  80:	00000050 	andeq	r0, r0, r0, asr r0
  84:	20000098 	mulcs	r0, r8, r0
  88:	000000b8 	strheq	r0, [r0], -r8
  8c:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  90:	41018e02 	tstmi	r1, r2, lsl #28
  94:	0000070d 	andeq	r0, r0, sp, lsl #14
  98:	0000001c 	andeq	r0, r0, ip, lsl r0
  9c:	00000050 	andeq	r0, r0, r0, asr r0
  a0:	20000150 	andcs	r0, r0, r0, asr r1
  a4:	00000012 	andeq	r0, r0, r2, lsl r0
  a8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  ac:	41018e02 	tstmi	r1, r2, lsl #28
  b0:	0d41100e 	stcleq	0, cr1, [r1, #-56]	; 0xffffffc8
  b4:	00000007 	andeq	r0, r0, r7
  b8:	00000018 	andeq	r0, r0, r8, lsl r0
  bc:	00000050 	andeq	r0, r0, r0, asr r0
  c0:	20000162 	andcs	r0, r0, r2, ror #2
  c4:	0000002e 	andeq	r0, r0, lr, lsr #32
  c8:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  cc:	41018e02 	tstmi	r1, r2, lsl #28
  d0:	0000070d 	andeq	r0, r0, sp, lsl #14
  d4:	00000018 	andeq	r0, r0, r8, lsl r0
  d8:	00000050 	andeq	r0, r0, r0, asr r0
  dc:	20000190 	mulcs	r0, r0, r1
  e0:	00000034 	andeq	r0, r0, r4, lsr r0
  e4:	87080e41 	strhi	r0, [r8, -r1, asr #28]
  e8:	41018e02 	tstmi	r1, r2, lsl #28
  ec:	0000070d 	andeq	r0, r0, sp, lsl #14
  f0:	00000018 	andeq	r0, r0, r8, lsl r0
  f4:	00000050 	andeq	r0, r0, r0, asr r0
  f8:	200001c4 	andcs	r0, r0, r4, asr #3
  fc:	000000a0 	andeq	r0, r0, r0, lsr #1
 100:	87080e41 	strhi	r0, [r8, -r1, asr #28]
 104:	41018e02 	tstmi	r1, r2, lsl #28
 108:	0000070d 	andeq	r0, r0, sp, lsl #14
 10c:	0000000c 	andeq	r0, r0, ip
 110:	ffffffff 			; <UNDEFINED> instruction: 0xffffffff
 114:	7c020001 	stcvc	0, cr0, [r2], {1}
 118:	000d0c0e 	andeq	r0, sp, lr, lsl #24
 11c:	0000000c 	andeq	r0, r0, ip
 120:	0000010c 	andeq	r0, r0, ip, lsl #2
 124:	20000000 	andcs	r0, r0, r0
 128:	0000000c 	andeq	r0, r0, ip
 12c:	0000000c 	andeq	r0, r0, ip
 130:	0000010c 	andeq	r0, r0, ip, lsl #2
 134:	20000264 	andcs	r0, r0, r4, ror #4
 138:	00000006 	andeq	r0, r0, r6
 13c:	0000000c 	andeq	r0, r0, ip
 140:	0000010c 	andeq	r0, r0, ip, lsl #2
 144:	2000026a 	andcs	r0, r0, sl, ror #4
 148:	00000006 	andeq	r0, r0, r6
 14c:	0000000c 	andeq	r0, r0, ip
 150:	0000010c 	andeq	r0, r0, ip, lsl #2
 154:	20000270 	andcs	r0, r0, r0, ror r2
 158:	00000006 	andeq	r0, r0, r6
 15c:	0000000c 	andeq	r0, r0, ip
 160:	0000010c 	andeq	r0, r0, ip, lsl #2
 164:	20000276 	andcs	r0, r0, r6, ror r2
 168:	00000006 	andeq	r0, r0, r6

Disassembly of section .debug_ranges:

00000000 <.debug_ranges>:
   0:	20000264 	andcs	r0, r0, r4, ror #4
   4:	2000027c 	andcs	r0, r0, ip, ror r2
   8:	20000000 	andcs	r0, r0, r0
   c:	2000000c 	andcs	r0, r0, ip
	...
